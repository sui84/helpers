<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <section name="Common.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <appSettings>
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <!--Replace &  Insert & Remove
    http://msdn.microsoft.com/en-us/library/dd465326.aspx
    
    <add key="testkey" value="testvalue" xdt:Transform="SetAttributes" xdt:Locator="Match(key)" />
    <add key="testkey" value="testvalue" xdt:Transform="Replace" xdt:Locator="Match(key)" />
    <add key="testkey" value="testvalue" xdt:Transform="Insert" />
    <sessionState xdt:Transform="Remove" xdt:Locator="XPath(/configuration/system.web/sessionState)"/>
    -->
  
  </appSettings>
  <loggingConfiguration name="" tracingEnabled="true" defaultCategory="General">
    <listeners>
      <add name="Event Log Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" source=" Web" formatter="Text Formatter" log="" machineName="." traceOutputOptions="None" />
      <add name="Email Trace Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.EmailTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.EmailTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" toAddress="testuser@test.cn" fromAddress="test@test.com.mo" subjectLineStarter="[Test] Web " subjectLineEnder="- DEV" smtpServer="smtpServer" formatter="Text Formatter" />
      <add name="Database Trace Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.Database.FormattedDatabaseTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging.Database, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Database.Configuration.FormattedDatabaseTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging.Database, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" databaseInstanceName="TestConnectionString" writeLogStoredProcName="WriteLog" addCategoryStoredProcName="AddCategory" formatter="Text Formatter" traceOutputOptions="None" />
    </listeners>
    <formatters>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" template="Timestamp: {timestamp(local)}{newline}&#xA;Message: {message}{newline}&#xA;Category: {category}{newline}&#xA;Priority: {priority}{newline}&#xA;EventId: {eventid}{newline}&#xA;Severity: {severity}{newline}&#xA;Title:{title}{newline}&#xA;Machine: {localMachine}{newline}&#xA;App Domain: {localAppDomain}{newline}&#xA;ProcessId: {localProcessId}{newline}&#xA;Process Name: {localProcessName}{newline}&#xA;Thread Name: {threadName}{newline}&#xA;Win32 ThreadId:{win32ThreadId}{newline}&#xA;Extended Properties: {dictionary({key} - {value}{newline})}" name="Text Formatter" />
    </formatters>
    <categorySources>
      <add switchValue="All" name="General">
        <listeners>
          <add name="Event Log Listener" />
          <add name="Database Trace Listener" />
        </listeners>
      </add>
      <add switchValue="All" name="Error">
        <listeners>
          <add name="Event Log Listener" />
          <add name="Email Trace Listener" />
          <add name="Database Trace Listener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events" />
      <notProcessed switchValue="All" name="Unprocessed Category" />
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="Event Log Listener" />
          <add name="Database Trace Listener" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <exceptionHandling>
    <exceptionPolicies>
      <add name="Exception Policy">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" logCategory="Error" eventId="100" severity="Error" title=" System Exception Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="0" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="Log Only Policy">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="None">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" logCategory="Error" eventId="100" severity="Error" title=" System Exception Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="0" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>
  <connectionStrings>
    <add name="TestConnectionString" connectionString="Data Source=localhost;Initial Catalog=TEST;User ID=sr_ams_user;Password=sr_ams_user;Connect Timeout=10;" providerName="System.Data.SqlClient" />
    <add name="TestConnectionString2" connectionString="Data Source=localhost;Initial Catalog=TEST;Integrated Security=True;Connect Timeout=10;" providerName="System.Data.SqlClient" />
    <!--
    AS400 connectioin string :
    Provider=IBMDA400.DataSource.1;Persist Security Info=False;User ID=TEST;Password=TEST;Data Source=localhost;Protection Level=None;Transport Product=Client Access;SSL=DEFAULT;Force Translate=65535;Connect Timeout=3;Convert Date Time To Char=TRUE;Cursor Sensitivity=3
    Oledb connectioin string : 
    Provider=SQLOLEDB.1;Data Source=localhost;Integrated Security=True;Connect Timeout=10;Initial Catalog=TEST
    Provider=SQLOLEDB.1;Data Source=localhost;Initial Catalog=TEST;Integrated Security=SSPI;

    
    -->
  </connectionStrings>
  <!--for security
  指定 ASP.NET 是否应检查请求标头，以检测可能的注入式攻击。如果检测到攻击，ASP.NET 将返回错误作为响应。
  此属性是 .NET Framework 2.0 版中的新属性。默认值为 True。
  -->
  <httpRuntime enableHeaderChecking="false"/>
  <system.web>
    <!--
    <compilation xdt:Transform="RemoveAttributes(debug,batch)"/>
    <pages viewStateEncryptionMode="Always" xdt:Transform="SetAttributes(viewStateEncryptionMode)" />  -->
    <authentication mode="Forms">
      <forms name="usercookie" loginUrl="~/Account/Login" defaultUrl="~/Home/Index" protection="All" cookieless="AutoDetect" />
    </authentication>
    <customErrors mode="Off" />
    <trace enabled="true" localOnly="true" mostRecent="true" requestLimit="10000" />
  </system.web>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <!--<assembly name="Common" />
    <namespace name="Common" />-->
    <container>
      <register type="Common.TestBL.Interface.IGetPayslipBLL,Common" mapTo="Common.BL.GetJMSBLL,Common" />
    </container>
  </unity>
  <applicationSettings>
    <Common.Properties.Settings>
      <!--StringCollection emailToForTest = SrConfiguration.EmailToForTest;-->
      <setting name="EmailToForTest" serializeAs="Xml">
        <value>
          <ArrayOfString xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
					  xmlns:xsd="http://www.w3.org/2001/XMLSchema" >
            <string>test@test.com</string>
          </ArrayOfString>
        </value>
      </setting>
      </Common.Properties.Settings>
  </applicationSettings>
  <system.serviceModel>
    <client>
      <endpoint address="http://localhost:15468/TestWebService.svc" binding="basicHttpBinding" bindingConfiguration="TestWebService" contract="TestWebService.TEST" name="TestWebService" />
      <endpoint address="http://localhost:15468/TestJMSWebService.svc" binding="customBinding" bindingConfiguration="TestJMSWebService" contract="TestJMSWebService.TEST" name="TestJMSWebService" />
    </client>
    <bindings>
      <basicHttpBinding>
        <binding name="TestWebService" closeTimeout="00:10:00" openTimeout="00:10:00" receiveTimeout="00:10:00" sendTimeout="00:10:00" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="2147483647" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" textEncoding="utf-8" transferMode="Buffered" useDefaultWebProxy="true" messageEncoding="Text">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <security mode="None" />
        </binding>
      </basicHttpBinding>
      <customBinding>
        <binding name="TestJMSWebService">
          <textMessageEncoding messageVersion="Soap12" writeEncoding="utf-8">
            <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          </textMessageEncoding>
          <httpTransport manualAddressing="false" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" allowCookies="false" authenticationScheme="Anonymous" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" keepAliveEnabled="true" maxBufferSize="2147483647" proxyAuthenticationScheme="Anonymous" realm="" transferMode="Buffered" unsafeConnectionNtlmAuthentication="false" useDefaultWebProxy="true" />
        </binding>
      </customBinding>
    </bindings>
    <diagnostics>
      <messageLogging logEntireMessage="false" logMalformedMessages="false" logMessagesAtServiceLevel="false" logMessagesAtTransportLevel="false" maxMessagesToLog="100000" maxSizeOfMessageToLog="26214400" />
    </diagnostics>
    <behaviors>
      <serviceBehaviors>
        <behavior name="">
          <serviceThrottling maxConcurrentCalls="1600" maxConcurrentSessions="10000" maxConcurrentInstances="11600" />
          <!-- To avoid disclosing metadata information, set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    
    <protocolMapping>
      <add binding="basicHttpsBinding" scheme="https" />
    </protocolMapping>
    <!--1. Change includeExceptionDetailInFaults to "true"
    The service cannot be activated because it does not support ASP.NET compatibility. ASP.NET compatibility is enabled for this application. Turn off ASP. ... in the web.config or
    add the AspNetCompatibilityRequirements attribute to the service type with RequirementsMode setting as 'Allowed' or 'Required'.-->
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.net>
    <defaultProxy useDefaultCredentials="true">
      <proxy usesystemdefault="True" proxyaddress="http://proxyServer:80" bypassonlocal="True"/>
      <bypasslist>
        <add address="172\.16\.\d{1,3}\.\d{1,3}" />
      </bypasslist>
    </defaultProxy>
  </system.net>
  <!--.csproj
  <ItemGroup>
    <None Include="App.config" />
    <Content Include="App.Debug.config">
      <DependentUpon>App.config</DependentUpon>
    </Content>
  </ItemGroup>
    <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  //To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  //
  <UsingTask TaskName="TransformXml" AssemblyFile="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v11.0\Web\Microsoft.Web.Publishing.Tasks.dll" />
  <Target Name="AfterCompile" Condition="exists('app.$(Configuration).config')">
   // Generate transformed app config in the intermediate directory
    <TransformXml Source="app.config" Destination="$(IntermediateOutputPath)$(TargetFileName).config" Transform="app.$(Configuration).config" />
    // Force build process to use the transformed configuration file from now on. 
    <ItemGroup>
      <AppConfigWithTargetPath Remove="app.config" />
      <AppConfigWithTargetPath Include="$(IntermediateOutputPath)$(TargetFileName).config">
        <TargetPath>$(TargetFileName).config</TargetPath>
      </AppConfigWithTargetPath>
    </ItemGroup>
  </Target>
  </Project>-->
  
</configuration>

